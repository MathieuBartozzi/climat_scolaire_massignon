import streamlit as st
import pandas as pd
from utils.utils import load_data,authenticate
import ast
import plotly.express as px


nom = authenticate()

# Titre principal
st.title("Climat scolaire ‚Äì Portail d‚Äôanalyse")

# Sous-titre
st.markdown("Bienvenue dans votre espace d‚Äôexploration des donn√©es issues du questionnaire Climat scolaire.")

# Encadr√© de contexte
st.info(
    "Ce portail a pour objectif de **faciliter la lecture et l‚Äôanalyse** des r√©ponses recueillies aupr√®s des √©l√®ves. "
    "Il vous permet d‚Äôidentifier les points d‚Äôappui et les axes d‚Äôam√©lioration pour renforcer le bien-√™tre et le climat dans votre √©tablissement."
)


# Chargement des donn√©es avec mise en cache
@st.cache_data
def load_data(path):
    return pd.read_csv(path)

file_path = "data/df_processed.csv"
df = load_data(file_path)

colonnes_ouvertes = [
    "confiance_dialogue_extrait",
    "projets_participes",
    "lieux_expression_libre",
    "moments_agreables",
    "moments_desagreables",
    "lieux_agreables",
    "lieux_desagreables",
    "changements_souhaites"
]


nb_total = len(df)

# Appliquer la conversion string ‚Üí liste python
for col in colonnes_ouvertes:
    df[col] = df[col].apply(lambda x: ast.literal_eval(x) if isinstance(x, str) else x)

# V√©rifie si au moins une des listes est non vide pour chaque √©l√®ve
nb_avec_au_moins_une_reponse_ouverte = (
    df[colonnes_ouvertes]
    .applymap(lambda x: isinstance(x, list) and len(x) > 0)
    .any(axis=1)
    .sum()
)

pourcentage_ouvertes = round(100 * nb_avec_au_moins_une_reponse_ouverte / nb_total, 1)



# Onglets principaux
tabs = st.tabs(["**BILAN DES R√âPONSES**", "**M√âTHODOLOGIE**", "**√Ä PROPOS**"])

# Onglet 1 ‚Äî Bilan des r√©ponses
with tabs[0]:
    # st.subheader("üìà Bilan des r√©ponses")
    st.markdown(f"""
    - **Nombre total de r√©pondants** : {len(df)} √©l√®ves
    - **Taux de r√©ponses aux questions ouvertes** : {pourcentage_ouvertes}% (ces questions √©taient facultatives)
    - **Croisement des r√©pondants par genre et niveau** :
    """)

    # Cr√©ation d'un tableau crois√© genre √ó niveau
    cross_tab = df.groupby(['niveau', 'genre']).size().reset_index(name='effectif')

    # Regroupement des effectifs par niveau et genre
    cross_tab = df.groupby(['niveau', 'genre']).size().reset_index(name='effectif')

    # Cr√©ation du graphique
    fig = px.bar(
        cross_tab,
        x="niveau",
        y="effectif",
        color="genre",
        barmode="group",
        labels={
            "niveau": "Niveau",
            "effectif": "Nombre d'√©l√®ves",
            "genre": "Genre"
        },
        color_discrete_sequence=px.colors.qualitative.Set2,
        height=400
    )

    # Affichage dans Streamlit
    with st.container(border=True):
        st.plotly_chart(fig, use_container_width=True)



# Onglet 2 ‚Äî M√©thodologie
with tabs[1]:
    # st.subheader("M√©thodologie d‚Äôanalyse")

    st.markdown("#### Un questionnaire structur√©")
    st.markdown("""
    Les √©l√®ves ont r√©pondu √† un questionnaire structur√© en deux volets :

    - **Des questions ferm√©es** (√† choix multiples ou √©chelles de satisfaction) portant sur le bien-√™tre, la s√©curit√©, l‚Äô√©coute, l‚Äôengagement, etc.
    - **Des questions ouvertes**, o√π ils pouvaient s‚Äôexprimer librement sur leurs ressentis, leurs souhaits, ou des moments v√©cus.

    Ces deux types de r√©ponses ont √©t√© analys√©s avec une m√©thodologie adapt√©e √† leur nature.
    """)
    st.divider()
    st.markdown("#### L‚Äôanalyse des questions ferm√©es")

    st.markdown("""
    Les r√©ponses ferm√©es ont √©t√© converties en **scores num√©riques** permettant de calculer des moyennes sur diff√©rents th√®mes.

    Nous avons ensuite :
    - Compar√© les r√©ponses **entre filles et gar√ßons**, ou **entre niveaux scolaires** (6e, 5e, 4e, 3e)
    - Rep√©r√© les **√©carts significatifs** (par exemple, des ressentis tr√®s diff√©rents selon le genre)
    - Visualis√© ces r√©sultats √† l‚Äôaide de **graphismes clairs** (barres, cartes color√©es)

    Ces analyses permettent de **rep√©rer des tendances collectives** et des signaux faibles, utiles pour le pilotage p√©dagogique.
    """)
    st.divider()
    st.markdown("#### Une lecture fine gr√¢ce aux ‚Äúprofils d‚Äô√©l√®ves‚Äù")

    st.markdown("""
    Chaque √©l√®ve a √©t√© associ√© √† un **profil** en fonction de ses r√©ponses globales.
    Cette classification automatique regroupe les √©l√®ves selon leurs ressentis et comportements dominants.
    Ces profils aident √† **sortir d‚Äôune lecture purement statistique** pour penser en termes de besoins p√©dagogiques diff√©renci√©s.
    """)

    st.divider()
    st.markdown("#### Une IA pour comprendre les r√©ponses ouvertes")

    st.markdown("""
    Les r√©ponses ouvertes sr√©v√®lent ce que les √©l√®ves vivent **avec leurs mots**.

    Pour les analyser sans les r√©duire :
    - Puis nous avons utilis√© **GPT-4o**, une intelligence artificielle avanc√©e, pour **extraire les mots-cl√©s ou th√®mes les plus repr√©sentatifs**.
    - Nous avons conduit un travail sur la fr√©quence des termes similaires (ex. ‚Äúr√©cr√©‚Äù, ‚Äúpause‚Äù, ‚Äúcour‚Äù)
    """)

    st.success("Cette m√©thodologie a √©t√© pens√©e pour √™tre rigoureuse, lisible, et surtout utile aux √©quipes √©ducatives.")



# Onglet 3 ‚Äî √Ä propos
with tabs[2]:
    # st.subheader("üí° √Ä propos de cette d√©marche")

    st.markdown("""
    Ce portail a √©t√© con√ßu pour aider les √©tablissements √† mieux comprendre le v√©cu des √©l√®ves √† partir des r√©ponses qu‚Äôils ont donn√©es dans un questionnaire sur le climat scolaire.

    L‚Äôobjectif est simple : **mettre les donn√©es au service de l‚Äô√©coute et de l‚Äôaction √©ducative**.

    ---

    #### Une approche p√©dagogique et √©thique

    - Aucune donn√©e nominative n‚Äôest utilis√©e.
    - L‚Äôanalyse est collective et respecte la confidentialit√©.
    - Les r√©ponses ouvertes sont trait√©es automatiquement par une intelligence artificielle (GPT-4o) pour faire √©merger les mots les plus repr√©sentatifs, sans interpr√©tation individuelle.

    ---

    #### Un outil libre et r√©utilisable

    Ce projet s‚Äôappuie sur :
    - Des outils open source (Python, Pandas, Streamlit)
    - Un traitement local des donn√©es
    - Une logique adaptable √† d‚Äôautres √©tablissements ou contextes

    ---

    #### üë§ Contact

    Pour toute question, am√©lioration ou collaboration p√©dagogique, vous pouvez contacter :

    **mathieu.bartozzi@mlfmonde.org**
    """)
